
// void exectution(t_cmd *full, t_env **env, int *exit_s)
// {
// 	char		**cmd;
// 	char		**path;
// 	int 		inf;
// 	int			outf;
// 	int			pipefd[2];
// 	pid_t		pid;
// 	int			perv_pipe;
// 	int			status;
// 	int			count;
// 	struct stat	stat_in, stat_stdin, stat_out, stat_stdout;
	
// 	count  = 0;
// 	perv_pipe = -1;
// 	path = NULL;
// 	path = takepaths(env);
// 	if (full->next)
// 	{
// 		while(full)
// 		{
// 			pipecheck(pipefd);
// 			pid = fork();
// 			here_doc_helper = 1337;
// 			signal(SIGQUIT, handle_signal);
// 			if (forkfaild(pid, pipefd))
// 				break;
// 			if (pid == 0)
// 			{
// 				get_redirections(&inf, &outf, full);
// 				if (inf == -1 || outf == -1)
// 					exit(0);
// 				if (inf != -1 &&
// 					fstat(inf, &stat_in) == 0 &&
// 					fstat(STDIN_FILENO, &stat_stdin) == 0 &&
// 					!(stat_in.st_ino == stat_stdin.st_ino && stat_in.st_dev == stat_stdin.st_dev)
// 					&& !isatty(inf))
// 				{
// 					dup2(inf, STDIN_FILENO);
// 					close(inf);
// 				}
// 				else if (perv_pipe != -1)
// 					dup2(perv_pipe, STDIN_FILENO);
// 				if (outf != -1 &&
// 					fstat(outf, &stat_out) == 0 &&
// 					fstat(STDOUT_FILENO, &stat_stdout) == 0 &&
// 					!(stat_out.st_ino == stat_stdout.st_ino && stat_out.st_dev == stat_stdout.st_dev)
// 					&& (isatty(STDIN_FILENO) || isatty(outf)) && isatty(inf))
// 				{
// 					dup2(outf, STDOUT_FILENO);
// 					close(outf);
// 				}
// 				else if (full->next)			
// 					dup2(pipefd[1], STDOUT_FILENO);
				
// 				close(pipefd[0]);
// 				close(pipefd[1]);
// 				if (full->args && inf != -5 && outf != -5)
// 				{
// 					if (search_search(full->args[0]) == 1)
// 					{
// 						buildin(full, env, exit_s);
// 						exit(*exit_s);
// 					}
// 					else
// 					{
// 						cmd = full->args;
// 						char *pathh = pick(path, cmd[0]);
// 						if (!pathh)
// 						{
// 							if (cmd[0][0] && ft_strrchr(cmd[0], '$') == NULL)
// 								fprintf(stderr, "minishell: %s: command not found\n", cmd[0]);
// 							exit(127);
// 						}
// 						if (!(*env)->env_v)
// 						{
// 							execve(pathh, cmd, NULL);
// 							fprintf(stderr, "this is %s\n", cmd[0]);
// 						}
// 						if (cmd[0][0] == '\0')
// 							fprintf(stderr, "minishell: : command not found\n");
// 						if (cmd[0][0])
// 						{
// 							execve(pathh, cmd, (*env)->env_v);
// 							fprintf(stderr , "execve failed\n");
// 						}
// 						exit(126);
// 					}
// 				}
// 				else if (!full->args)
// 				{
// 					if(inf)
// 						close(inf);
// 					if (outf)
// 						close(outf);
// 					if (full->file->here_doc)
// 						close(full->file->here_doc);
// 					return ;
// 				}
// 			}
// 			else
// 			{
// 				if (inf)
// 					close(inf);
// 				if (outf)
// 					close(outf);
// 				if(full->file->here_doc)
// 					close(full->file->here_doc);
// 				handelprevpipe(pipefd, &perv_pipe);
// 				count++;
// 			}
// 			full = full->next;
// 		}
// 		close(pipefd[0]);
// 		while (count > 0)
// 		{
// 			wait(&status);
// 			count--;
// 			if (WIFEXITED(status))
// 			{
// 				int exit_status = WEXITSTATUS(status);
// 				*exit_s = exit_status;
// 			}
// 		}
// 	}
// 	else
// 		execute_single_cmd(full, env, exit_s);
// }

